version: 3
tasks:
    api:
        desc: generating http handlers
        sources:
            -  api/post-forwarder.yaml
        generates:
            - internal/post-forwarder/driver/openapi_gen.go
        cmds:
            - oapi-codegen -old-config-style -generate types,server -o "internal/post-forwarder/driver/openapi_gen.go" -package "driver" "api/post-forwarder.yaml"
    mocks:
        desc: generating mocks
        sources:
            - interfaces.go
        generates:
            - mocks/*.go
        dir: "internal/post-forwarder/domain"
        cmds:
            - mockery --name ApplicationInterface
            - mockery --name MessageDestination
    test:
        desc: running tests
        dir: "internal/"
        deps:
            - decorate
            - mocks
        cmds:
            - go test -cover -v ./...
    lint:
        desc: running linter
        dir: "internal/"
        cmds:
            - golangci-lint run
    decorate-handlers:
        deps:
            - api
        desc: decorate handlers
        dir: "internal/post-forwarder/driver"
        sources:
            - openapi_gen.go
        generates:
            - open_api_zap_gen.go
            - open_api_sentry_gen.go
        cmds:
            - gowrap gen -i ServerInterface -t https://raw.githubusercontent.com/adlandh/gowrap-templates/main/zap.gotmpl -o open_api_zap_gen.go
            - gowrap gen -i ServerInterface -t https://raw.githubusercontent.com/adlandh/gowrap-templates/main/echo-sentry.gotmpl -o open_api_sentry_gen.go
    decorate:
        desc: decorate interfaces
        deps:
            - decorate-handlers
        dir: "internal/post-forwarder/domain"
        sources:
            - interfaces.go
        generates:
            - wrappers/*.go
        cmds:
            - gowrap gen -i ApplicationInterface -t https://raw.githubusercontent.com/adlandh/gowrap-templates/main/zap.gotmpl -o wrappers/ApplicationInterfaceWithZap.go
            - gowrap gen -i MessageDestination -t https://raw.githubusercontent.com/adlandh/gowrap-templates/main/zap.gotmpl -o wrappers/MessageDestinationWithZap.go
            - gowrap gen -i ApplicationInterface -t https://raw.githubusercontent.com/adlandh/gowrap-templates/main/sentry.gotmpl  -o wrappers/ApplicationInterfaceWithSentry.go
            - gowrap gen -i MessageDestination -t https://raw.githubusercontent.com/adlandh/gowrap-templates/main/sentry.gotmpl  -o wrappers/MessageDestinationWithSentry.go
    deploy:
        desc: Deploy to gcp
        cmds:
            - gcloud app deploy --quiet
    namespace:
        desc: create new namespace in kubernetes
        cmds:
            - kubectl apply -f docker/namespace.yaml
    secrets:
        desc: create  kubernetes secrets
        deps:
            - namespace
        cmds:
            - kubectl delete secret post-forwarder --namespace=post-forwarder || true
            - kubectl create secret generic post-forwarder --from-env-file=local-secrets.env --namespace=post-forwarder
    run:
        desc: run app locally in kubernetes
        deps:
            - decorate
            - namespace
        cmds:
            - skaffold run --tail
    dev:
        desc: run app locally in kubernetes with auto build when code is changed
        deps:
            - decorate
            - namespace
        cmds:
            - skaffold dev --tail
    stop:
        desc: stop app running locally
        cmds:
            - kubectl delete -f docker/deployment.yaml
            - kubectl delete -f docker/namespace.yaml
    logs:
        desc: Show logs
        cmds:
            - gcloud app logs tail
    inf:
        desc: Pulumi Up
        dir: "inf"
        cmds:
            - pulumi up
    inf-y:
        desc: Pulumi Up -y
        dir: "inf"
        cmds:
            - pulumi up -y
    registry:
        desc: Run registry locally
        cmds:
            - docker run -d -p 5000:5000 --restart=always --name registry registry:2
            - skaffold config set default-repo localhost:5000
    send-test-string:
        desc: Send test string
        dotenv:
            - local-secrets.env
        cmds:
            - http GET "http://localhost:8080/api/${AUTH_TOKEN}/test?msg=<b>test</b>" --raw="test<br>body"
    purge-old-versions:
        desc: Delete old versions of service in gcp
        cmds:
            - |
                VERSIONS=$(gcloud app versions list --service default --sort-by '~VERSION.ID' --format 'value(VERSION.ID)' | sed 1,3d)
                for version in $VERSIONS
                    do gcloud app versions delete "$version" --service default --quiet
                done

