version: 3
tasks:
    generate:
        desc: generating http handlers, mocks and decorators
        sources:
            - api/post-forwarder.yaml
            - internal/post-forwarder/domain/interfaces.go
            - internal/post-forwarder/driver/http.go
        generates:
            - internal/post-forwarder/driver/openapi_gen.go
            - internal/post-forwarder/domain/mocks/*.go
            - internal/post-forwarder/domain/wrappers/*.go
            - internal/post-forwarder/driver/*gen.go
        cmds:
            - go generate ./internal/post-forwarder/...
    test:
        desc: running tests
        dir: "internal/"
        deps:
            - generate
        cmds:
            - go test -cover -race -v ./...
    lint:
        desc: running linter
        deps:
            - generate
        dir: "internal/"
        cmds:
            - curl -sS https://raw.githubusercontent.com/adlandh/golangci-lint-config/refs/heads/main/.golangci.yml -o ../.golangci.yml
            - golangci-lint run
    deploy:
        desc: Deploy to gcp
        deps:
            - generate
        cmds:
            - doppler secrets substitute --config prd app-secrets.yaml.gotmpl >app-secrets.yaml
            - gcloud app deploy --quiet --no-cache
    namespace:
        desc: create new namespace in kubernetes
        cmds:
            - kubectl apply -f k8s/namespace.yaml
    secrets:
        desc: create  kubernetes secrets
        deps:
            - namespace
        cmds:
            - kubectl apply -f k8s/secrets.yaml
    run:
        desc: run app locally in kubernetes
        deps:
            - generate
            - secrets
        cmds:
            - skaffold run
    dev:
        desc: run app locally in kubernetes with auto build when code is changed
        deps:
            - generate
            - secrets
        cmds:
            - skaffold dev --tail
    tilt:
        desc: run app locally in kubernetes with auto build when code is changed with tilt
        deps:
            - generate
            - secrets
        cmds:
            - tilt up
    stop:
        desc: stop app running locally
        cmds:
            - skaffold delete
    logs:
        desc: Show logs
        cmds:
            - gcloud app logs tail
    inf:
        desc: Pulumi Up
        dir: "inf"
        cmds:
            - pulumi up
    inf-y:
        desc: Pulumi Up -y
        dir: "inf"
        cmds:
            - pulumi up -y
    inf-show:
        desc: Show pulumi stack
        dir: "inf"
        cmds:
            - pulumi stack output --show-secrets
    registry:
        desc: Run registry locally
        cmds:
            - docker run -d -p 5001:5000 --restart=always --name registry registry:2
            - skaffold config set default-repo localhost:5001
    send-test-string:
        desc: Send test string
        cmds:
            - doppler run --config dev --command 'http GET "http://localhost:8080/api/${AUTH_TOKEN}/test?msg=<b>test</b>" --raw="test<br>body"'
    send-test-long-string:
        desc: Send test string
        cmds:
            - | 
              doppler run --config dev --command 'http GET "http://localhost:8080/api/${AUTH_TOKEN}/test" --raw="name,email,address,postalZip,region,country,numberrange \
                Kimberly Alford,rutrum@protonmail.ca,472-8909 Eu St.,00645,Vlaams-Brabant,France,0 \
                Katelyn Barnes,nisl.elementum@outlook.couk,Ap #394-9814 At St.,662588,Namen,Indonesia,3 \
                Adara Myers,eget@icloud.net,Ap #843-9905 Eu Street,71629,CÃ³rdoba,Canada,2 \
                Megan Weaver,eros.proin@protonmail.com,Ap #694-2065 Ipsum. Av.,830536,Sicilia,South Korea,2 \
                Zia Boyer,justo@google.com,Ap #111-2695 Eget St.,38338,Ancash,South Africa,6 \
                "'
    purge-old-versions:
        desc: Delete old versions of service in gcp
        cmds:
            - |
                VERSIONS=$(gcloud app versions list --service default --sort-by '~VERSION.ID' --format 'value(VERSION.ID)' | sed 1,3d)
                for version in $VERSIONS
                    do gcloud app versions delete "$version" --service default --quiet
                done
    list-buckets:
        desc: List app engine buckets with lifecycle rules
        dir: "inf"
        cmds:
            - |
              filter="$(pulumi stack output "app id").appspot.com"  
              for gs in $(gsutil ls | grep $filter); do
                echo -n "${gs}: "
                gsutil lifecycle get ${gs}
              done
    doppler:
        desc: install and setup doppler
        cmds:
            - kubectl apply -f https://github.com/DopplerHQ/kubernetes-operator/releases/latest/download/recommended.yaml
            - kubectl create secret generic doppler-token-secret --namespace doppler-operator-system --from-literal=serviceToken=$(doppler configs tokens create doppler-kubernetes-operator --plain --config dev)


